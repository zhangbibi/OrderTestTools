/**
 * Created by zhangyaping on 2017/6/28.
 */
(function ($) {
    var IDUtil={};
    var areaArray = ["110000","110100","110229","120000","120100","120101","130000","130100","130101","130822","130823","130824","130825","130826","130982","130983","130984","131000","131001","131002","131003","131022","131023","131181","131182","140000","140100","140101","140105","140106","140932","140981","141000","141001","141002","141181","141182","150000","150100","150430","150823","150981","210000","210100","210101","210102","210103","210104","210105","210106","210111","210112","210113","210114","210122","210123","210604","210624","210681","210682","210700","210701","210702","210703","210711","210726","210727","210781","210782","210800","210801","210802","210803","210804","210811","210881","210882","210900","210901","211302","211303","211321","211322","211324","220700","220701","220702","220721","220722","220723","220724","220800","220801","220802","220821","220822","220881","220882","222400","222401","222402","222403","222404","222405","230306","230307","230321","230381","230382","230400","230401","230402","230403","230404","230405","230406","230407","230421","230422","230500","230501","230502","230503","230505","230506","230521","230522","230523","230524","230600","230601","230602","230603","230604","230605","230803","230804","230805","230811","230822","230826","231222","231223","231224","231225","231226","231281","231282","231283","320211","320281","320282","320300","320301","320302","320303","320304","320305","320311","320321","320322","320323","320324","320701","320703","320705","320706","320721","320722","320723","320724","320800","320801","320802","320803","320804","320811","320826","320829","320830","320831","320900","321322","321323","321324","330000","330100","330101","330102","330103","330104","330105","330106","330108","330109","330110","330122","330127","330182","330183","330185","330200","330201","330203","330204","330205","330206","330211","330212","330225","330226","330281","331000","331001","331002","331003","331004","331126","331127","331181","340000","340100","340101","340504","340521","340600","340601","340602","340603","340604","340621","340700","340701","341824","341825","341881","350000","350100","350101","350102","350922","350923","350924","350925","350926","350981","350982","360000","360100","360101","360102","361130","361181","370000","370100","370101","370102","370103","370104","370105","370112","371726","371727","371728","410000","422828","429000","429004","429005","429006","429021","430000","430100","430921","430922","430923","430981","431000","431001","431002","433127","433130","440000","440100","440101","440103","440104","440105","440883","440900","440901","440902","440903","440923","440981","440982","440983","441200","441201","441202","441203","441223","441224","441225","441226","441283","441284","441300","441301","441302","441303","441322","441323","441324","441400","441401","441402","441421","441422","441423","441424","441426","441427","441481","441500","441501","441502","441521","441523","441581","441600","441601","441602","441621","441622","441623","441624","441625","441700","441701","441702","441721","441723","441781","441800","441801","441802","441821","441823","441825","441826","441827","441881","441882","441900","442000","445100","445101","445102","445121","445122","445200","445201","445202","445221","445222","445224","445281","445300","445301","445302","445321","445322","445323","445381","450000","450100","450101","450102","450103","450105","450107","450108","450109","450122","450123","450124","450125","450126","450127","450200","450201","451425","451481","460000","460100","460101","469033","500000","500100","500101","500242","500243","510000","510100","510101","510703","510704","510722","510723","510724","510725","510726","510727","510781","510800","520113","520114","520121","520122","522730","522731","522732","530000","530100","530101","530102","530103","532322","532323","532324","532325","532326","532327","532328","532329","532331","532500","532501","532502","532522","532523","532524","532525","532526","532527","533423","540000","540100","540101","540102","540121","540122","540123","540124","540125","540126","540127","542626","542627","610000","610100","610101","610102","610103","610104","610111","610112","610113","611022","611023","611024","611025","611026","620000","623026","623027","630000","630100","632802","632821","632822","632823","640000","640100","640101","640521","650000","650100","650101","650102","650103","650104","650105","650106","650107","650109","710000","810000","820000"];
    /**
     * 生成方法
     */
    IDUtil.generateRandomID = function(sex,birthday) {
        var generater = ""+randomAreaCode()+formatBirthday(birthday)+randomCode(sex);
        generater = ""+generater+(calcTrailingNumber(generater.split("")));
        return generater;
    }
    /**
     * 随机地区
     */
    function randomAreaCode() {
        var index = Math.round(Math.random()*areaArray.length);
        return areaArray[index];
    }
    /**
     * 随机出生日期
     */
    function formatBirthday(birthday) {
        return birthday.replace("-","").replace("-","").replace("/","").replace("/","");
    }
    /*
     * <p>18位身份证验证</p> 根据〖中华人民共和国国家标准 GB
     * 11643-1999〗中有关公民身份号码的规定，公民身份号码是特征组合码，由十七位数字本体码和一位数字校验码组成。
     * 排列顺序从左至右依次为：六位数字地址码，八位数字出生日期码，三位数字顺序码和一位数字校验码。 第十八位数字(校验码)的计算方法为：
     * 1.将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7 9 10 5 8 4 2 1 6 3 7 9 10 5 8
     * 4 2 2.将这17位数字和系数相乘的结果相加。 3.用加出来和除以11，看余数是多少？ 4.余数只可能有0 1 2 3 4 5 6 7 8 9
     * 10这11个数字。其分别对应的最后一位身份证的号码为1 0 X 9 8 7 6 5 4 3 2。
     * 5.通过上面得知如果余数是2，就会在身份证的第18位数字上出现罗马数字的Ⅹ。如果余数是10，身份证的最后一位号码就是2。
     */
    function calcTrailingNumber(chars) {
        if (chars.length < 17) {
            return ' ';
        }
        var c = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
        var r = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];
        var result = 0;
        for (var i = 0; i < chars.length; i++) {
            result += c[i] * chars[i];
        }
        return r[result % 11];
    }
    /**
     * 随机产生3位数
     */
    function randomCode(sex) {
        var code = ""+(Math.round(Math.random()*8)+1)+Math.round(Math.random()*9)+Math.round(Math.random()*9);
        while(code%2 == sex){
            code = ""+(Math.round(Math.random()*8)+1)+Math.round(Math.random()*9)+Math.round(Math.random()*9);
        }
        return code;
    }
    $.extend(IDUtil);
})(jQuery)